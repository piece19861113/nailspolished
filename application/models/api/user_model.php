<?php if (!defined('BASEPATH')) exit('No direct script access allowed');

class User_model extends CI_Model {

	public function __construct() {
		
	}
	public function login($data_param) {
		$query = $this->db->get_where('users', array('email' => $data_param['email'], 'password' => md5($data_param['password']), 'customer_closed' => 0));
		if($query -> num_rows() == 1) {
			if(isset($data_param['gcm_id']) && isset($data_param['apns_id'])) {
				$this->db->update('users', array('gcm_id' => $data_param['gcm_id'], 'apns_id' => $data_param['apns_id']), array('email' => $data_param['email']));
			}
			$query1 = $this->db->get_where('users', array('email' => $data_param['email'], 'password' => md5($data_param['password']), 'customer_closed' => 0));
			return $query1->row_array();
		} else {
			return false;
		}
	}
	public function reset_password($email) {
		$this->db->select('id, group_id, email, customer_verified, user_role, first_name, last_name, date_created, facebook_id, salon_id, photo_url, gcm_id, apns_id');
		$query = $this->db->get_where('users', array('email' => $email, 'customer_closed' => 0));
		if($query -> num_rows() == 1) {
			$new_password =  substr(md5($email . time() . config_item('encryption_key')), 0, 8);
			$this->db->update('users', array('password' => md5($new_password)), array('email' => $email));
			
			$user = $query->row_array();
			
			$subject = 'NailsPolished - Your Account Password is reset';
			$message = '
				Dear ' . $user['first_name'] . '.<br>
				Your <a target="_blank" href="' . base_url() . '">NailsPolished</a> account password has been reset.<br>
				<br><br>
				Log in at <a target="_blank" href="' . base_url() . '">nailspolished.com</a> with your email address and password given below:<br>
				<br>
				Email Address : ' . $email . '<br>
				Password : ' . $new_password . '<br>
				<br><br>
				This password is temporarily generated by our services, you can login to our site and change your account information including password.<br>
				<br>
				Need Help? <a target="_blank" href="' . base_url() . '">Get Answers</a> Now<br>
				If you have any problems setting up your account, we\'re here to help.
				Of course, you can chat with us during business hours, or visit our Question and Answer site that contains the most frequently asked questions 24 hours a day.
				<br>
				If you don\'t find your answer there, you can also start a new thread with your specific question.
				';
			//$from_email = 'donotreply@nailspolished.com';
			//$from_email = 'scottpjr@live.com';
			//$from_pd = 'sydney95';
			$from_email = 'ryongak@outlook.com';
			$from_pd = 'Fyddkr223';
			require_once('PHPMailer/PHPMailerAutoload.php');
			
			$mail = new PHPMailer();  // create a new object
			$mail->IsSMTP(); // enable SMTP
			$mail->CharSet = 'UTF-8';
			$mail->Host = 'smtp.live.com';
			$mail->SMTPAuth = true;
			$mail->Username = $from_email;
			$mail->Password = $from_pd;
			$mail->SMTPSecure = 'tls';
			$mail->Port = 587;
			$mail->addAddress($email);
			$mail->From = $from_email;
			$mail->FromName = 'NailsPolished';
			$mail->Subject = $subject;
			$mail->Body = $message;
			$mail->isHTML(true);
			$mail->SMTPDebug = 0;
			if(!$mail->send()) {
				return $mail->ErrorInfo;
			}
			return 1;
		} else {
			return 2;
		}
	}
	public function register($data_param, $user_role_name_param = null, $is_fb = false) {
		$query = $this->db->get_where('users', array('email' => $data_param['email']));
		if($query->num_rows() > 0) {
			if($is_fb) {
				$query_fb = $this->db->get_where('users', array('email' => $data_param['email'], 'facebook_id' => $data_param['facebook_id']));
				if($query_fb->num_rows() == 1) {
					if(isset($data_param['gcm_id']) && isset($data_param['apns_id'])) {
                                        $this->db->update('users', 
                                                array('gcm_id' => $data_param['gcm_id'], 
                                                    'apns_id' => $data_param['apns_id']), 
                                                array('email' => $data_param['email'], 
                                                    'facebook_id' => $data_param['facebook_id']));
					}
					return $query_fb->row_array();
				} else {
					return -1;
				}
			} else {
				return -1;
			}
		}
		$data = $data_param;
		if(isset($data['password'])) {
			$data['password'] = md5($data['password']);
		}
		$user_role_name = (!isset($user_role_name_param) ? element('name', element('customer', config_item('user_role'))) : $user_role_name_param);
		$data['group_id'] = element('val', element($user_role_name, config_item('user_role')));
		$data['user_role'] = element('val', element($user_role_name, config_item('user_role')));
		$data['date_created'] = date('Y-m-d h:i:s');
		$data['customer_verified'] = 0;
		if($user_role_name == 'salon') {
			$this->db->select_max('salon_id', 'max_salon_id');
			$query = $this->db->get('members');
			$max_salon_id = (int)element('max_salon_id', $query->row_array());
			$new_salon_id = ($max_salon_id > 10000) ? ($max_salon_id + 1) : 10001;
			$data['salon_id'] = $new_salon_id;
		}
		$this->db->insert('users', $data);
		$id = $this->db->insert_id();
		if(isset($id)) {
			if(isset($data_param['favorite_salon_id'])) {
				$this->db->insert('favorites', array('customer_id' => $id, 'salon_id' => $data_param['favorite_salon_id']));
			}
			$query = $this->db->get_where('users', array('id' => $id));
			if($query -> num_rows() == 1) {
				return $query->row_array();
			} else {
				return 0;
			}
		} else {
			return 0;
		}
	}
	
	public function delete_user($customer_id) {
		/* $salon_ids = array();
		$query = $this->db->select('salon_id')->get_where('reviews', array('customer_id' => $customer_id));
		foreach($query->result_array() as $row) {
			$salon_ids[] = $row['salon_id'];
		}
		$this->db->delete('reviews', array('customer_id' => $customer_id));
		foreach($salon_ids as $salon_id) {
			$this->update_salons_avg_score($salon_id);
		}
		*/
		$this->db->update('users', array('customer_closed' => 1), array('id' => $customer_id));
		return true; 
	}
	
	public function change_password($params) {
		$query = $this->db->select('facebook_id')->get_where('users', array('id' => $params['customer_id']));
		if(element('facebook_id', $query->row_array()) != 0) {
			return false;
		} else {
			$this->db->update('users', array('password' => md5($params['password'])), array('id' => $params['customer_id']));
			return array('customer_id' => $params['customer_id']);
		}
	}
}